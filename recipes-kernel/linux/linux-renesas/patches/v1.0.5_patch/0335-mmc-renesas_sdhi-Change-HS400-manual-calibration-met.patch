From 2d0a6895837397d9c3ee515dfe8c0bdeb6af4092 Mon Sep 17 00:00:00 2001
From: Loc Vu <loc.vu.zn@renesas.com>
Date: Thu, 11 Jun 2020 14:49:50 +0700
Subject: [PATCH 335/458] mmc: renesas_sdhi: Change HS400 manual calibration
 method

The manual calibration value is changed from a fixed value
to a table value.
This method provides the optimum calibration value.

[Flow of enable manual calibration]
1) Disable register write protect
2) Read current calibration code
3) Refer to calibration table
4) Set manual mode with calibration code(table value).
5) Set offset

Note)
Calibration table is updated.
- RZG2M/N/E use manual calibration.
- RZG2H does not use manual calibration (yet).

Reference path:
- Repository: https://github.com/renesas-rcar/linux-bsp
- Branch: v4.14.75-ltsi/rcar-3.9.8
- Commit: <5e1187e7ad6af53a9081fa03578d5f18730cb6c1>

Signed-off-by: Loc Vu <loc.vu.zn@renesas.com>
---
 drivers/mmc/host/renesas_sdhi.h               |  5 +-
 drivers/mmc/host/renesas_sdhi_core.c          | 97 +++++++++++++--------------
 drivers/mmc/host/renesas_sdhi_internal_dmac.c |  1 +
 3 files changed, 51 insertions(+), 52 deletions(-)

diff --git a/drivers/mmc/host/renesas_sdhi.h b/drivers/mmc/host/renesas_sdhi.h
index 4503662..7cd85d0 100644
--- a/drivers/mmc/host/renesas_sdhi.h
+++ b/drivers/mmc/host/renesas_sdhi.h
@@ -29,6 +29,7 @@ struct renesas_sdhi_of_data {
 	enum dma_slave_buswidth dma_buswidth;
 	dma_addr_t dma_rx_offset;
 	unsigned int bus_shift;
+	phys_addr_t mmc0_addr;
 	int scc_offset;
 	struct renesas_sdhi_scc *taps;
 	int taps_num;
@@ -42,7 +43,7 @@ struct renesas_sdhi_quirks {
 	bool dtranend1_bit17;
 	bool hs400_manual_calib;
 	u32 hs400_offset;
-	u32 hs400_calib;
+	const u32 *hs400_calib_table;
 };
 
 struct tmio_mmc_dma {
@@ -66,7 +67,7 @@ struct renesas_sdhi {
 	u32 scc_tappos_hs400;
 	bool dtranend1_bit17;
 	u32 adjust_hs400_offset;
-	u32 adjust_hs400_calibrate;
+	const u32 *adjust_hs400_calib_table;
 };
 
 #define host_to_priv(host) \
diff --git a/drivers/mmc/host/renesas_sdhi_core.c b/drivers/mmc/host/renesas_sdhi_core.c
index 247e45c..0a64fe6 100644
--- a/drivers/mmc/host/renesas_sdhi_core.c
+++ b/drivers/mmc/host/renesas_sdhi_core.c
@@ -254,6 +254,28 @@ static int renesas_sdhi_start_signal_voltage_switch(struct mmc_host *mmc,
 #define SH_MOBILE_SDHI_SCC_TMPPORT_DISABLE_WP_CODE	0xa5000000
 #define SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK	0x1f
 #define SH_MOBILE_SDHI_SCC_TMPPORT_MANUAL_MODE		BIT(7)
+#define CALIB_TABLE_MAX		(SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK + 1)
+
+static const u32 r8a7796_rev1_calib_table[2][CALIB_TABLE_MAX] = {
+	{ 3,  3,  3,  3,  3,  3,  3,  4,  4,  5,  6,  7,  8,  9, 10, 15,
+	 16, 16, 16, 16, 16, 16, 17, 18, 18, 19, 20, 21, 22, 23, 24, 25 },
+	{ 5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  7,  8, 11,
+	 12, 17, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 22, 23, 25, 25 }
+};
+
+static const u32 r8a77965_calib_table[2][CALIB_TABLE_MAX] = {
+	{ 1,  2,  6,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 15, 15, 16,
+	 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 26, 27, 28, 29, 30, 31 },
+	{ 2,  3,  4,  4,  5,  6,  7,  9, 10, 11, 12, 13, 14, 15, 16, 17,
+	 17, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 31, 31, 31 }
+};
+
+static const u32 r8a77990_calib_table[2][CALIB_TABLE_MAX] = {
+	{ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },
+	{ 0,  0,  0,  1,  2,  3,  3,  4,  4,  4,  5,  5,  6,  8,  9, 10,
+	 11, 12, 13, 15, 16, 17, 17, 18, 18, 19, 20, 22, 24, 25, 26, 26 }
+};
 
 static inline u32 sd_scc_read32(struct tmio_mmc_host *host,
 				struct renesas_sdhi *priv, int addr)
@@ -445,27 +467,29 @@ static void renesas_sdhi_adjust_hs400_mode_enable(struct mmc_host *mmc)
 	struct renesas_sdhi *priv = host_to_priv(host);
 	u32 calib_code;
 
+	if (!priv->adjust_hs400_calib_table)
+		return;
+
 	/* Enabled Manual adjust HS400 mode
 	 *
 	 * 1) Disabled Write Protect
 	 *    W(addr=0x00, WP_DISABLE_CODE)
-	 * 2) Read Calibration code and adjust
-	 *    R(addr=0x26) - adjust value
-	 * 3) Enabled Manual Calibration
+	 * 2) Read Calibration code
+	 *    read_value = R(addr=0x26)
+	 * 3) Refer to calibration table
+	 *    Calibration code = table[read_value]
+	 * 4) Enabled Manual Calibration
 	 *    W(addr=0x22, manual mode | Calibration code)
-	 * 4) Set Offset value to TMPPORT3 Reg
+	 * 5) Set Offset value to TMPPORT3 Reg
 	 */
+
 	sd_scc_tmpport_write32(host, priv, 0x00,
 			       SH_MOBILE_SDHI_SCC_TMPPORT_DISABLE_WP_CODE);
 	calib_code = sd_scc_tmpport_read32(host, priv, 0x26);
 	calib_code &= SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK;
-	if (calib_code > priv->adjust_hs400_calibrate)
-		calib_code -= priv->adjust_hs400_calibrate;
-	else
-		calib_code = 0;
 	sd_scc_tmpport_write32(host, priv, 0x22,
 			       SH_MOBILE_SDHI_SCC_TMPPORT_MANUAL_MODE |
-			       calib_code);
+			       priv->adjust_hs400_calib_table[calib_code]);
 	sd_scc_write32(host, priv, SH_MOBILE_SDHI_SCC_TMPPORT3,
 		       priv->adjust_hs400_offset);
 
@@ -699,25 +723,30 @@ static const struct renesas_sdhi_quirks sdhi_quirks_r8a7796_rev1 = {
 	.hs400_4taps = true,
 	.hs400_manual_calib = true,
 	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0,
-	.hs400_calib = 0x9,
+	.hs400_calib_table = r8a7796_rev1_calib_table[0],
 };
 
 static const struct renesas_sdhi_quirks sdhi_quirks_r8a77965 = {
 	.hs400_manual_calib = true,
 	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0,
-	.hs400_calib = 0x0,
+	.hs400_calib_table = r8a77965_calib_table[0],
 };
 
 static const struct renesas_sdhi_quirks sdhi_quirks_r8a77990 = {
 	.hs400_manual_calib = true,
 	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0,
-	.hs400_calib = 0x4,
+	.hs400_calib_table = r8a77990_calib_table[0],
 };
 
 static const struct soc_device_attribute sdhi_quirks_match[]  = {
 	{ .soc_id = "r8a774a1", .revision = "ES1.*",
 	  .data = &sdhi_quirks_r8a7796_rev1, },
-	{ .soc_id = "r8a774e1", .data = &sdhi_quirks_4tap },
+	{ .soc_id = "r8a774b1",
+	  .data = &sdhi_quirks_r8a77965, },
+	{ .soc_id = "r8a774c0",
+	  .data = &sdhi_quirks_r8a77990, },
+	{ .soc_id = "r8a774e1",
+	  .data = &sdhi_quirks_4tap, },
 	{ .soc_id = "r8a7795", .revision = "ES1.*",
 	  .data = &sdhi_quirks_4tap_nohs400_bit17, },
 	{ .soc_id = "r8a7795", .revision = "ES2.0",
@@ -749,8 +778,7 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 	struct resource *res;
 	int irq, ret, i;
 	u16 ver;
-	const struct device_node *np = pdev->dev.of_node;
-	u32 value;
+	int port_num_offset = 0;
 
 	of_data = of_device_get_match_data(&pdev->dev);
 
@@ -849,39 +877,9 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 
 	/* Adjust HS400 mode */
 	priv->adjust_hs400_offset = 0;
-	priv->adjust_hs400_calibrate = 0;
+	priv->adjust_hs400_calib_table = NULL;
 
-	if (np && !of_property_read_u32(np, "adjust_hs400_offset", &value)) {
-		/* DeviceTree can invalidate SoC attribute for HS400 */
-		switch (value) {
-		case 0:
-			priv->adjust_hs400_offset =
-				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0;
-			break;
-		case 1:
-			priv->adjust_hs400_offset =
-				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_1;
-			break;
-		case 2:
-			priv->adjust_hs400_offset =
-				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_2;
-			break;
-		case 3:
-			priv->adjust_hs400_offset =
-				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_3;
-			break;
-		default:
-			priv->adjust_hs400_offset =
-				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_3;
-			dev_warn(&host->pdev->dev, "Unknown adjust hs400 offset\n");
-		}
-		if (!of_property_read_u32(np, "adjust_hs400_calibrate", &value))
-			priv->adjust_hs400_calibrate = value;
-		host->adjust_hs400_mode_enable =
-			renesas_sdhi_adjust_hs400_mode_enable;
-		host->adjust_hs400_mode_disable =
-			renesas_sdhi_adjust_hs400_mode_disable;
-	} else if (host->mmc->caps2 & MMC_CAP2_HS400) {
+	if (host->mmc->caps2 & MMC_CAP2_HS400) {
 		if (quirks && quirks->hs400_disabled) {
 			host->mmc->caps2 &=
 				~(MMC_CAP2_HS400 | MMC_CAP2_HS400_ES);
@@ -889,9 +887,8 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 			priv->adjust_hs400_offset =
 				quirks->hs400_offset &
 				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_MASK;
-			priv->adjust_hs400_calibrate =
-				quirks->hs400_calib &
-				SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK;
+			priv->adjust_hs400_calib_table =
+				quirks->hs400_calib_table + port_num_offset;
 			host->adjust_hs400_mode_enable =
 				renesas_sdhi_adjust_hs400_mode_enable;
 			host->adjust_hs400_mode_disable =
diff --git a/drivers/mmc/host/renesas_sdhi_internal_dmac.c b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
index af868fa..e835ff9 100644
--- a/drivers/mmc/host/renesas_sdhi_internal_dmac.c
+++ b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
@@ -92,6 +92,7 @@ static const struct renesas_sdhi_of_data of_rcar_gen3_compatible = {
 			  MMC_CAP_CMD23,
 	.capabilities2	= MMC_CAP2_NO_WRITE_PROTECT,
 	.bus_shift	= 2,
+	.mmc0_addr	= 0xee160000,
 	.scc_offset	= 0x1000,
 	.taps		= rcar_gen3_scc_taps,
 	.taps_num	= ARRAY_SIZE(rcar_gen3_scc_taps),
-- 
2.7.4

