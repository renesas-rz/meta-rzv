From ee71f8189fbd59ae4d0c7a602ab162ef2022481f Mon Sep 17 00:00:00 2001
From: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
Date: Wed, 22 Nov 2017 21:13:22 +0900
Subject: [PATCH 194/458] mmc: renesas_sdhi: Add support for pre_req and
 post_req

This patch implements pre_req and post_req to support
asynchronous mmc request.

Reference path:
- Repository: git://github.com/renesas-rcar/linux-bsp.git
- Branch: v4.14.75-ltsi/rcar-3.9.6
- Commit: 20998a8ef0cf

Signed-off-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
[saito: adjust context.]
Signed-off-by: Takeshi Saito <takeshi.saito.xv@renesas.com>
Signed-off-by: Khoi Nguyen <khoi.nguyen.aj@renesas.com>
---
 drivers/mmc/host/renesas_sdhi_internal_dmac.c | 21 +++++++--------------
 1 file changed, 7 insertions(+), 14 deletions(-)

diff --git a/drivers/mmc/host/renesas_sdhi_internal_dmac.c b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
index 5a16a7c..2c74c89 100644
--- a/drivers/mmc/host/renesas_sdhi_internal_dmac.c
+++ b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
@@ -159,14 +159,9 @@ renesas_sdhi_internal_dmac_start_dma(struct tmio_mmc_host *host,
 	struct scatterlist *sg = host->sg_ptr;
 	u32 dtran_mode = DTRAN_MODE_BUS_WID_TH | DTRAN_MODE_ADDR_MODE;
 
-	if (!dma_map_sg(&host->pdev->dev, sg, host->sg_len,
-			mmc_get_dma_dir(data)))
+	if (!tmio_mmc_pre_dma_transfer(host, data, COOKIE_MAPPED))
 		goto force_pio;
 
-	/* This DMAC cannot handle if buffer is not 8-bytes alignment */
-	if (!IS_ALIGNED(sg_dma_address(sg), 8))
-		goto force_pio_with_unmap;
-
 	if (data->flags & MMC_DATA_READ) {
 		dtran_mode |= DTRAN_MODE_CH_NUM_CH1;
 		if (test_bit(SDHI_INTERNAL_DMAC_ONE_RX_ONLY, &global_flags) &&
@@ -208,22 +203,20 @@ static void renesas_sdhi_internal_dmac_issue_tasklet_fn(unsigned long arg)
 static void renesas_sdhi_internal_dmac_complete_tasklet_fn(unsigned long arg)
 {
 	struct tmio_mmc_host *host = (struct tmio_mmc_host *)arg;
-	enum dma_data_direction dir;
 
 	spin_lock_irq(&host->lock);
 
 	if (!host->data)
 		goto out;
 
-	if (host->data->flags & MMC_DATA_READ)
-		dir = DMA_FROM_DEVICE;
-	else
-		dir = DMA_TO_DEVICE;
-
 	renesas_sdhi_internal_dmac_enable_dma(host, false);
-	dma_unmap_sg(&host->pdev->dev, host->sg_ptr, host->sg_len, dir);
+	if (host->data && host->data->host_cookie == COOKIE_MAPPED) {
+		dma_unmap_sg(&host->pdev->dev, host->sg_ptr, host->sg_len,
+			     mmc_get_dma_dir(host->data));
+		host->data->host_cookie = COOKIE_UNMAPPED;
+	}
 
-	if (dir == DMA_FROM_DEVICE)
+	if (host->data->flags & MMC_DATA_READ)
 		clear_bit(SDHI_INTERNAL_DMAC_RX_IN_USE, &global_flags);
 
 	tmio_mmc_do_data_irq(host);
-- 
2.7.4

