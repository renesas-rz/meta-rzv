From cb7cb4f592aa08d9762315c59ef0d8210132e199 Mon Sep 17 00:00:00 2001
From: Huynh Thanh Hung <hung.huynh.wz@renesas.com>
Date: Wed, 8 Apr 2020 11:23:57 +0700
Subject: [PATCH 301/443] media: usb: uvc: Init reserved memory region for each
 usb media device

We must have reserved memory region to allocate dma-contig memory.
Because the media device don't have device node, so we will take its
controller device node to get the reserved memory region.
Also set dma bit mask to have dma capability.

Signed-off-by: Huynh Thanh Hung <hung.huynh.wz@renesas.com>
---
 drivers/media/usb/uvc/uvc_driver.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/media/usb/uvc/uvc_driver.c b/drivers/media/usb/uvc/uvc_driver.c
index 43b8755..17b4b32 100644
--- a/drivers/media/usb/uvc/uvc_driver.c
+++ b/drivers/media/usb/uvc/uvc_driver.c
@@ -25,6 +25,8 @@
 
 #include <media/v4l2-common.h>
 #include <media/v4l2-ioctl.h>
+#include <linux/of.h>
+#include <linux/of_reserved_mem.h>
 
 #include "uvcvideo.h"
 
@@ -2100,6 +2102,7 @@ static int uvc_probe(struct usb_interface *intf,
 	struct uvc_device *dev;
 	const struct uvc_device_info *info =
 		(const struct uvc_device_info *)id->driver_info;
+	struct device *usb_root = udev->bus->controller;
 	u32 quirks = info ? info->quirks : 0;
 	int function;
 	int ret;
@@ -2225,6 +2228,18 @@ static int uvc_probe(struct usb_interface *intf,
 
 	uvc_trace(UVC_TRACE_PROBE, "UVC device initialized.\n");
 	usb_enable_autosuspend(udev);
+
+	/* Take the first memory-region property of controller device node to
+	 * set as reserved memory region.
+	 */
+	ret = of_reserved_mem_device_init_by_idx(dev->vdev.dev,
+						 usb_root->of_node, 0);
+
+	if (ret)
+		dev_err(dev->mdev.dev, "Init reserved memory failed.\n");
+	else
+		dma_set_coherent_mask(dev->vdev.dev, DMA_BIT_MASK(64));
+
 	return 0;
 
 error:
@@ -2237,6 +2252,9 @@ static void uvc_disconnect(struct usb_interface *intf)
 {
 	struct uvc_device *dev = usb_get_intfdata(intf);
 
+	/* Release reserved memory region in device */
+	of_reserved_mem_device_release(dev->vdev.dev);
+
 	/* Set the USB interface data to NULL. This can be done outside the
 	 * lock, as there's no other reader.
 	 */
-- 
2.7.4

