From 38d2acef8923ffe405a9e7175996d0f0622d063a Mon Sep 17 00:00:00 2001
From: Loc Vu <loc.vu.zn@renesas.com>
Date: Thu, 11 Jun 2020 15:12:45 +0700
Subject: [PATCH 316/443] Revert "mmc: renesas_sdhi: Change HS400 manual
 calibration method"

This reverts commit 76996ec2cf3888647623bdc07f2a23cdafb174b0

According to SDHI HW manual, Rcar-H3 3.0
and Rcar-M3 3.0 are changed to
auto calibration and calibration table is updated.

Reference path:
- Repository: https://github.com/renesas-rcar/linux-bsp
- Branch: v4.14.75-ltsi/rcar-3.9.8
- Commit: <d01f6ab4bac4ff7f7ec152e0652beccfc0533d83>

Signed-off-by: Loc Vu <loc.vu.zn@renesas.com>
---
 drivers/mmc/host/renesas_sdhi.h               |   5 +-
 drivers/mmc/host/renesas_sdhi_core.c          | 117 +++++++++++---------------
 drivers/mmc/host/renesas_sdhi_internal_dmac.c |   1 -
 3 files changed, 51 insertions(+), 72 deletions(-)

diff --git a/drivers/mmc/host/renesas_sdhi.h b/drivers/mmc/host/renesas_sdhi.h
index 7cd85d0..4503662 100644
--- a/drivers/mmc/host/renesas_sdhi.h
+++ b/drivers/mmc/host/renesas_sdhi.h
@@ -29,7 +29,6 @@ struct renesas_sdhi_of_data {
 	enum dma_slave_buswidth dma_buswidth;
 	dma_addr_t dma_rx_offset;
 	unsigned int bus_shift;
-	phys_addr_t mmc0_addr;
 	int scc_offset;
 	struct renesas_sdhi_scc *taps;
 	int taps_num;
@@ -43,7 +42,7 @@ struct renesas_sdhi_quirks {
 	bool dtranend1_bit17;
 	bool hs400_manual_calib;
 	u32 hs400_offset;
-	const u32 *hs400_calib_table;
+	u32 hs400_calib;
 };
 
 struct tmio_mmc_dma {
@@ -67,7 +66,7 @@ struct renesas_sdhi {
 	u32 scc_tappos_hs400;
 	bool dtranend1_bit17;
 	u32 adjust_hs400_offset;
-	const u32 *adjust_hs400_calib_table;
+	u32 adjust_hs400_calibrate;
 };
 
 #define host_to_priv(host) \
diff --git a/drivers/mmc/host/renesas_sdhi_core.c b/drivers/mmc/host/renesas_sdhi_core.c
index 3a2d08b..247e45c 100644
--- a/drivers/mmc/host/renesas_sdhi_core.c
+++ b/drivers/mmc/host/renesas_sdhi_core.c
@@ -254,42 +254,6 @@ static int renesas_sdhi_start_signal_voltage_switch(struct mmc_host *mmc,
 #define SH_MOBILE_SDHI_SCC_TMPPORT_DISABLE_WP_CODE	0xa5000000
 #define SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK	0x1f
 #define SH_MOBILE_SDHI_SCC_TMPPORT_MANUAL_MODE		BIT(7)
-#define CALIB_TABLE_MAX		(SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK + 1)
-
-static const u32 r8a7795_calib_table[2][CALIB_TABLE_MAX] = {
-	{ 0,  0,  0,  0,  0,  1,  1,  2,  3,  4,  5,  5,  6,  6,  7, 11,
-	 15, 16, 16, 17, 17, 17, 17, 17, 18, 18, 18, 18, 19, 20, 21, 21 },
-	{ 3,  3,  4,  4,  5,  6,  6,  7,  8,  8,  9,  9, 10, 11, 12, 15,
-	 16, 16, 17, 17, 17, 17, 17, 18, 18, 18, 18, 19, 20, 21, 22, 22 }
-};
-
-static const u32 r8a7796_rev1_calib_table[2][CALIB_TABLE_MAX] = {
-	{ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  3,  4,  9,
-	 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 19, 20, 21, 21, 22, 22 },
-	{ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
-	 2,  9, 16, 17, 17, 17, 18, 18, 18, 18, 19, 20, 21, 22, 23, 24}
-};
-
-static const u32 r8a7796_rev3_calib_table[2][CALIB_TABLE_MAX] = {
-	{ 0,  0,  0,  0,  2,  3,  4,  4,  5,  6,  7,  7,  8,  9,  9, 10,
-	 11, 12, 13, 15, 16, 17, 17, 18, 19, 19, 20, 21, 21, 22, 23, 23 },
-	{ 1,  2,  2,  3,  4,  4,  5,  6,  6,  7,  8,  9,  9, 10, 11, 12,
-	 13, 14, 15, 16, 17, 17, 18, 19, 20, 20, 21, 22, 22, 23, 24, 24 }
-};
-
-static const u32 r8a77965_calib_table[2][CALIB_TABLE_MAX] = {
-	{ 0,  1,  2,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 15,
-	 16, 17, 18, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 29 },
-	{ 0,  1,  2,  2,  2,  3,  4,  5,  6,  7,  9, 10, 11, 12, 13, 15,
-	 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 31 }
-};
-
-static const u32 r8a77990_calib_table[2][CALIB_TABLE_MAX] = {
-	{ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
-	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },
-	{ 0,  0,  1,  2,  3,  4,  4,  4,  4,  5,  5,  6,  7,  8, 10, 11,
-	 12, 13, 14, 16, 17, 18, 18, 18, 19, 19, 20, 24, 26, 26, 26, 26 }
-};
 
 static inline u32 sd_scc_read32(struct tmio_mmc_host *host,
 				struct renesas_sdhi *priv, int addr)
@@ -481,28 +445,27 @@ static void renesas_sdhi_adjust_hs400_mode_enable(struct mmc_host *mmc)
 	struct renesas_sdhi *priv = host_to_priv(host);
 	u32 calib_code;
 
-	if (!priv->adjust_hs400_calib_table)
-		return;
-
 	/* Enabled Manual adjust HS400 mode
 	 *
 	 * 1) Disabled Write Protect
 	 *    W(addr=0x00, WP_DISABLE_CODE)
-	 * 2) Read Calibration code
-	 *    read_value = R(addr=0x26)
-	 * 3) Refer to calibration table
-	 *    Calibration code = table[read_value]
-	 * 4) Enabled Manual Calibration
+	 * 2) Read Calibration code and adjust
+	 *    R(addr=0x26) - adjust value
+	 * 3) Enabled Manual Calibration
 	 *    W(addr=0x22, manual mode | Calibration code)
-	 * 5) Set Offset value to TMPPORT3 Reg
+	 * 4) Set Offset value to TMPPORT3 Reg
 	 */
 	sd_scc_tmpport_write32(host, priv, 0x00,
 			       SH_MOBILE_SDHI_SCC_TMPPORT_DISABLE_WP_CODE);
 	calib_code = sd_scc_tmpport_read32(host, priv, 0x26);
 	calib_code &= SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK;
+	if (calib_code > priv->adjust_hs400_calibrate)
+		calib_code -= priv->adjust_hs400_calibrate;
+	else
+		calib_code = 0;
 	sd_scc_tmpport_write32(host, priv, 0x22,
 			       SH_MOBILE_SDHI_SCC_TMPPORT_MANUAL_MODE |
-			       priv->adjust_hs400_calib_table[calib_code]);
+			       calib_code);
 	sd_scc_write32(host, priv, SH_MOBILE_SDHI_SCC_TMPPORT3,
 		       priv->adjust_hs400_offset);
 
@@ -732,35 +695,23 @@ static const struct renesas_sdhi_quirks sdhi_quirks_4tap_nohs400 = {
 	.hs400_4taps = true,
 };
 
-static const struct renesas_sdhi_quirks sdhi_quirks_r8a7795 = {
-	.hs400_manual_calib = true,
-	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_3,
-	.hs400_calib_table = r8a7795_calib_table[0],
-};
-
 static const struct renesas_sdhi_quirks sdhi_quirks_r8a7796_rev1 = {
 	.hs400_4taps = true,
 	.hs400_manual_calib = true,
 	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0,
-	.hs400_calib_table = r8a7796_rev1_calib_table[0],
-};
-
-static const struct renesas_sdhi_quirks sdhi_quirks_r8a7796_rev3 = {
-	.hs400_manual_calib = true,
-	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_3,
-	.hs400_calib_table = r8a7796_rev3_calib_table[0],
+	.hs400_calib = 0x9,
 };
 
 static const struct renesas_sdhi_quirks sdhi_quirks_r8a77965 = {
 	.hs400_manual_calib = true,
 	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0,
-	.hs400_calib_table = r8a77965_calib_table[0],
+	.hs400_calib = 0x0,
 };
 
 static const struct renesas_sdhi_quirks sdhi_quirks_r8a77990 = {
 	.hs400_manual_calib = true,
 	.hs400_offset = SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0,
-	.hs400_calib_table = r8a77990_calib_table[0],
+	.hs400_calib = 0x4,
 };
 
 static const struct soc_device_attribute sdhi_quirks_match[]  = {
@@ -798,7 +749,8 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 	struct resource *res;
 	int irq, ret, i;
 	u16 ver;
-	int port_num_offset = 0;
+	const struct device_node *np = pdev->dev.of_node;
+	u32 value;
 
 	of_data = of_device_get_match_data(&pdev->dev);
 
@@ -866,8 +818,6 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 		mmc_data->max_segs = of_data->max_segs;
 		dma_priv->dma_buswidth = of_data->dma_buswidth;
 		host->bus_shift = of_data->bus_shift;
-		if (res->start != of_data->mmc0_addr)
-			port_num_offset = CALIB_TABLE_MAX;
 	}
 
 	host->write16_hook	= renesas_sdhi_write16_hook;
@@ -899,9 +849,39 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 
 	/* Adjust HS400 mode */
 	priv->adjust_hs400_offset = 0;
-	priv->adjust_hs400_calib_table = NULL;
+	priv->adjust_hs400_calibrate = 0;
 
-	if (host->mmc->caps2 & MMC_CAP2_HS400) {
+	if (np && !of_property_read_u32(np, "adjust_hs400_offset", &value)) {
+		/* DeviceTree can invalidate SoC attribute for HS400 */
+		switch (value) {
+		case 0:
+			priv->adjust_hs400_offset =
+				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_0;
+			break;
+		case 1:
+			priv->adjust_hs400_offset =
+				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_1;
+			break;
+		case 2:
+			priv->adjust_hs400_offset =
+				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_2;
+			break;
+		case 3:
+			priv->adjust_hs400_offset =
+				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_3;
+			break;
+		default:
+			priv->adjust_hs400_offset =
+				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_3;
+			dev_warn(&host->pdev->dev, "Unknown adjust hs400 offset\n");
+		}
+		if (!of_property_read_u32(np, "adjust_hs400_calibrate", &value))
+			priv->adjust_hs400_calibrate = value;
+		host->adjust_hs400_mode_enable =
+			renesas_sdhi_adjust_hs400_mode_enable;
+		host->adjust_hs400_mode_disable =
+			renesas_sdhi_adjust_hs400_mode_disable;
+	} else if (host->mmc->caps2 & MMC_CAP2_HS400) {
 		if (quirks && quirks->hs400_disabled) {
 			host->mmc->caps2 &=
 				~(MMC_CAP2_HS400 | MMC_CAP2_HS400_ES);
@@ -909,8 +889,9 @@ int renesas_sdhi_probe(struct platform_device *pdev,
 			priv->adjust_hs400_offset =
 				quirks->hs400_offset &
 				SH_MOBILE_SDHI_SCC_TMPPORT3_OFFSET_MASK;
-			priv->adjust_hs400_calib_table =
-				quirks->hs400_calib_table + port_num_offset;
+			priv->adjust_hs400_calibrate =
+				quirks->hs400_calib &
+				SH_MOBILE_SDHI_SCC_TMPPORT_CALIB_CODE_MASK;
 			host->adjust_hs400_mode_enable =
 				renesas_sdhi_adjust_hs400_mode_enable;
 			host->adjust_hs400_mode_disable =
diff --git a/drivers/mmc/host/renesas_sdhi_internal_dmac.c b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
index c7bbc46..c5b4a1b 100644
--- a/drivers/mmc/host/renesas_sdhi_internal_dmac.c
+++ b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
@@ -92,7 +92,6 @@ static const struct renesas_sdhi_of_data of_rcar_gen3_compatible = {
 			  MMC_CAP_CMD23,
 	.capabilities2	= MMC_CAP2_NO_WRITE_PROTECT,
 	.bus_shift	= 2,
-	.mmc0_addr	= 0xee140000,
 	.scc_offset	= 0x1000,
 	.taps		= rcar_gen3_scc_taps,
 	.taps_num	= ARRAY_SIZE(rcar_gen3_scc_taps),
-- 
2.7.4

