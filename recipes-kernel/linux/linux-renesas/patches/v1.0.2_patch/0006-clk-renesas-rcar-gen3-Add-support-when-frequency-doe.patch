From a24ce684a50abfbcb44f42cd82bcc798fc10e357 Mon Sep 17 00:00:00 2001
From: Hien Huynh <hien.huynh.px@renesas.com>
Date: Mon, 25 Feb 2019 15:55:24 +0700
Subject: [PATCH 006/248] clk: renesas: rcar-gen3: Add support when frequency
 does not propagate to parent in z clock divider

This patch adds support for not propagating frequency to parent as
zg clock.

If zero is specified for the max_freq in struct cpg_z_clk,
manipulators of cpg_z_clk_round_rate() and cpg_z_clk_set_rate()
are calculated using the arguments parent_rate and rate.

Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
Signed-off-by: Hien Huynh <hien.huynh.px@renesas.com>
---
 drivers/clk/renesas/rcar-gen3-cpg.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/clk/renesas/rcar-gen3-cpg.c b/drivers/clk/renesas/rcar-gen3-cpg.c
index 5288ef0..ed927dc 100644
--- a/drivers/clk/renesas/rcar-gen3-cpg.c
+++ b/drivers/clk/renesas/rcar-gen3-cpg.c
@@ -240,7 +240,10 @@ static long cpg_z_clk_round_rate(struct clk_hw *hw, unsigned long rate,
 	unsigned long prate = *parent_rate / zclk->fixed_div;
 	unsigned int mult;
 
-	if (rate <= zclk->max_freq) { /*changing z-clock*/
+	if (!zclk->max_freq) {
+		/* Set parent as aargment */
+		mult = div_u64((u64)rate * 32, prate);
+	} else if (rate <= zclk->max_freq) {
 		prate = zclk->max_freq; /* Set parent as init value */
 		mult = div_u64((u64)rate * 32, prate);
 	} else {
@@ -259,11 +262,14 @@ static int cpg_z_clk_set_rate(struct clk_hw *hw, unsigned long rate,
 			      unsigned long parent_rate)
 {
 	struct cpg_z_clk *zclk = to_z_clk(hw);
+	unsigned long prate = parent_rate / zclk->fixed_div;
 	unsigned int mult;
 	unsigned int i;
 	u32 val, kick;
 
-	if (rate <= zclk->max_freq)
+	if (!zclk->max_freq)
+		mult = DIV_ROUND_CLOSEST_ULL(rate * 32ULL, prate);
+	else if (rate <= zclk->max_freq)
 		mult = DIV_ROUND_CLOSEST_ULL(rate * 32ULL, zclk->max_freq);
 	else
 		mult = 32;
-- 
2.7.4

