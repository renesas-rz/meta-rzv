From e0112424192076eef6ec80e4a5222001b2b24b67 Mon Sep 17 00:00:00 2001
From: Hiep Pham <hiep.pham.zy@renesas.com>
Date: Thu, 12 Mar 2020 16:21:08 +0700
Subject: [PATCH 197/197] serial: sh-sci: fix issue of handling parity error in
 PIO mode

Current SCIF driver does not treat parity error properly when working
with SCIF|HSCIF interface types in PIO mode.

In sci_receive_chars() of drivers/tty/serial/sh-sci.c, SCxRDR is read
before reading SCxSR which is wrong sequence for SCIF|HSCIF. Therefore,
parity errors cannot be detected correctly.

Signed-off-by: Hiep Pham <hiep.pham.zy@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 29dce54..cb57d30 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -873,9 +873,16 @@ static void sci_receive_chars(struct uart_port *port)
 				tty_insert_flip_char(tport, c, TTY_NORMAL);
 		} else {
 			for (i = 0; i < count; i++) {
-				char c = serial_port_in(port, SCxRDR);
-
-				status = serial_port_in(port, SCxSR);
+				char c;
+
+				if (port->type == PORT_SCIF ||
+					 port->type == PORT_HSCIF) {
+					status = serial_port_in(port, SCxSR);
+					c = serial_port_in(port, SCxRDR);
+				} else {
+					c = serial_port_in(port, SCxRDR);
+					status = serial_port_in(port, SCxSR);
+				}
 				if (uart_handle_sysrq_char(port, c)) {
 					count--; i--;
 					continue;
-- 
2.7.4

